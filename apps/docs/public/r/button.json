{
  "name": "button",
  "type": "registry:core",
  "dependencies": ["tailwind-variants", "twmx"],
  "files": [
    {
      "path": "src/registry/react/core/button.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as SlotPrimitive from \"@radix-ui/react-slot\";\nimport { tv, type VariantProps } from \"tailwind-variants\";\nimport { twmx } from \"twmx\";\n\nexport type ButtonVarinat = VariantProps<typeof buttonVariants>;\nexport interface ButtonProps\n  extends React.ComponentProps<\"button\">,\n    ButtonVarinat {\n  asChild?: boolean;\n}\n\nexport default function Button({\n  variant = \"primary\",\n  size = \"md\",\n  width = \"auto\",\n  asChild,\n  className,\n  ...props\n}: ButtonProps) {\n  const Comp = asChild ? SlotPrimitive.Slot : \"button\";\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={twmx(buttonVariants({ variant, size, width, className }))}\n      {...props}\n    />\n  );\n}\n\nexport const buttonVariants = tv({\n  base: [\n    \"relative isolate inline-flex cursor-pointer items-center justify-center gap-x-2 rounded-md border border-transparent px-3.5 py-2.5 text-base/6 font-medium disabled:pointer-events-none disabled:opacity-50 sm:px-3 sm:py-1.5 sm:text-sm/6 [&_svg:not([class*='size-'])]:size-4 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n  ],\n  variants: {\n    variant: {\n      primary:\n        \"after:inset-shadow-2xs after:inset-shadow-white/15 bg-neutral-700/90 text-white before:absolute before:inset-0 before:-z-10 before:rounded-md before:bg-neutral-600 before:shadow-sm after:absolute after:inset-0 after:-z-10 after:rounded-md hover:bg-neutral-700 hover:after:bg-white/10 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-500 active:bg-neutral-700 active:after:bg-white/10 disabled:before:shadow-none disabled:after:shadow-none dark:border-white/5 dark:bg-neutral-600 dark:before:hidden dark:after:-inset-px dark:after:rounded-md dark:hover:after:bg-white/5 dark:active:after:bg-white/5\",\n      secondary:\n        \"after:inset-shadow-2xs after:inset-shadow-white/15 bg-neutral-950/90 text-white before:absolute before:inset-0 before:-z-10 before:rounded-md before:bg-neutral-900 before:shadow-sm after:absolute after:inset-0 after:-z-10 after:rounded-md hover:bg-neutral-950 hover:after:bg-white/10 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-500 active:bg-neutral-950 active:after:bg-white/10 disabled:before:shadow-none disabled:after:shadow-none dark:border-white/5 dark:bg-neutral-800 dark:before:hidden dark:after:-inset-px dark:after:rounded-md dark:hover:after:bg-white/5 dark:active:after:bg-white/5\",\n      destruct:\n        \"after:inset-shadow-2xs after:inset-shadow-white/15 bg-red-600 text-white before:absolute before:inset-0 before:-z-10 before:rounded-md before:bg-red-600 before:shadow-sm after:absolute after:inset-0 after:-z-10 after:rounded-md hover:bg-red-700 hover:after:bg-white/10 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-500 active:bg-red-700 active:after:bg-white/10 disabled:before:shadow-none disabled:after:shadow-none dark:border-white/5 dark:bg-red-600 dark:before:hidden dark:after:-inset-px dark:after:rounded-md dark:hover:after:bg-white/5 dark:active:after:bg-white/5\",\n    },\n    width: {\n      full: \"w-full\",\n      auto: \"w-auto\",\n    },\n    size: {\n      sm: \"h-8\",\n      md: \"h-9\",\n      lg: \"h-10\",\n    },\n  },\n});\n",
      "type": "registry:core",
      "target": "components/core/button.tsx"
    }
  ]
}
